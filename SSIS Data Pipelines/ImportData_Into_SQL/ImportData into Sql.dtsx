<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/3/2025 2:38:53 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-5QFOUEI"
  DTS:CreatorName="DESKTOP-5QFOUEI\Arafat"
  DTS:DTSID="{0F2B526C-1F5F-4584-B06B-9AFFDED84E2A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="16393"
  DTS:ObjectName="ImportData into Sql"
  DTS:PackageType="5"
  DTS:VersionBuild="9"
  DTS:VersionGUID="{B97774F7-B69B-4412-9DDF-05496E3B482D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9899E42A-4F64-4C5D-8FE6-B430985BECF2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\Arafat\Desktop\Hospital Management Dahsboard\Data Source\Appointment</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7FC350CB-8BBD-4759-B34E-00C83D534804}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="InputFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\Arafat\Desktop\Hospital Management Dahsboard\Data Source</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{CA5DEB9A-2EED-4060-8C8D-B13AB36A1DF2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{EC8D0C85-7D6A-4E58-8F6A-E1CC9FF09EA3}"
        DTS:ObjectName="{EC8D0C85-7D6A-4E58-8F6A-E1CC9FF09EA3}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::InputFolder]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\Arafat\Desktop\Hospital Management Dahsboard\Data Source" />
            <FEFEProperty
              FileSpec="*xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{FD6C1077-01F2-4A78-9E33-7AF0B8F525FB}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0c8396b8d7b9409690a58e3020d504f5"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0c8396b8d7b9409690a58e3020d504f5.Properties.Settings.get_Default():ST_0c8396b8d7b9409690a58e3020d504f5.Properties.Sett" +
    "ings")]

namespace ST_0c8396b8d7b9409690a58e3020d504f5.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.IO;
using System.Data.OleDb;
using System.Data.SqlClient;
using System.IO;
#endregion

namespace ST_0c8396b8d7b9409690a58e3020d504f5
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string currentdatetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            string LogFolder = @"C:\Users\Arafat\Desktop\Hospital Management Dahsboard\SSIS Data Pipelines\Logs";

            try
            {
                string FilePath = Dts.Variables["FilePath"].Value.ToString();
                string FileName = Path.GetFileName(FilePath);
                string TableName = "";
                TableName = Path.GetFileNameWithoutExtension(FilePath);
                TableName =  TableName;

                string ConStr;
                string HDR;
                HDR = "YES";
                ConStr = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + FilePath + ";Extended Properties=\"Excel 12.0;HDR=" + HDR + ";IMEX=1\"";
                OleDbConnection cnn = new OleDbConnection(ConStr);
                string sqlconnectionstring = @"data source=DESKTOP-5QFOUEI;initial catalog = Hospital_Management; persist security info = True;Integrated Security = SSPI;";

                cnn.Open();
                System.Data.DataTable Sheet = cnn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                string sheetname;
                sheetname = "";
                foreach (DataRow DrSheet in Sheet.Rows)
                {
                    if (DrSheet["TABLE_NAME"].ToString().Contains("$"))
                    {
                        sheetname = DrSheet["TABLE_NAME"].ToString();

                        OleDbCommand oconn = new OleDbCommand("select * from [" + sheetname + "]", cnn);
                        OleDbDataAdapter adp = new OleDbDataAdapter(oconn);
                        System.Data.DataTable dt = new System.Data.DataTable();
                        adp.Fill(dt);

                        sheetname = sheetname.Replace("$", "");

                        string tableDDL = "";
                        tableDDL += "IF EXISTS (SELECT * FROM sys.objects WHERE object_id = ";
                        tableDDL += "OBJECT_ID(N'[dbo].[" + TableName + "]') AND type in (N'U'))";
                        tableDDL += "Drop Table [dbo].[" + TableName + "]";
                        tableDDL += "Create table [" + TableName + "]";
                        tableDDL += "(";
                        for (int i = 0; i < dt.Columns.Count; i++)
                        {
                            if (i != dt.Columns.Count - 1)
                                tableDDL += "[" + dt.Columns[i].ColumnName + "] " + "NVarchar(4000)" + ",";
                            else
                                tableDDL += "[" + dt.Columns[i].ColumnName + "] " + "NVarchar(4000)";
                        }
                        tableDDL += ")";


                        SqlConnection sqlCon = new SqlConnection(sqlconnectionstring);
                        sqlCon.Open();

                        SqlCommand command = new SqlCommand(tableDDL, sqlCon);
                        command.CommandTimeout = 0;
                        command.ExecuteNonQuery();

                        SqlBulkCopy blk = new SqlBulkCopy(sqlCon);
                        blk.DestinationTableName = "[" + TableName + "]";
                        blk.WriteToServer(dt);
                        sqlCon.Close();
                    }
                    break;
                }
            }

            catch (Exception exception)
            {
                using (StreamWriter sw = File.CreateText(LogFolder + "\\" + "ErrorLog_" + currentdatetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                }

            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0c8396b8d7b9409690a58e3020d504f5.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0c8396b8d7b9409690a58e3020d504f5.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0c8396b8d7b9409690a58e3020d504f5.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0c8396b8d7b9409690a58e3020d504f5.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0c8396b8d7b9409690a58e3020d504f5.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_0c8396b8d7b9409690a58e3020d504f5</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_0c8396b8d7b9409690a58e3020d504f5</msb:DisplayName>
    <msb:ProjectId>{4ABA3719-FEC9-46FD-8B04-1AC46B5F7F02}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0c8396b8d7b9409690a58e3020d504f5.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0c8396b8d7b9409690a58e3020d504f5")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0c8396b8d7b9409690a58e3020d504f5")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_0c8396b8d7b9409690a58e3020d504f5.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8825F2F7-AFBE-43FC-A633-6D3993C7ACFA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0c8396b8d7b9409690a58e3020d504f5</RootNamespace>
    <AssemblyName>ST_0c8396b8d7b9409690a58e3020d504f5</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_0c8396b8d7b9409690a58e3020d504f5.dll">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
IAQGAFYBpwQOAFkFawAGAOsFCgcOAMgHXwAOANoAXwAOAGkFbQcGAO0ApwQGAHcFpwQGALQFLgAG
AK4EpwQGAEsCEgYGAEsHpwQGAKQFRQYGAJQFCwUSABsCWwQSAHwCWwQSAPUB9gQGADACJQYKAEkE
IAQWAOIGXwEWAOQAXwEGAPwDLgAGAPUDpwQOAFwFgQUOAIYAawAGAJEApwQOAEcFXwAOANoBXwAO
AJYAawAOAMwFawAOAM8FgQUOADIFXwAOAM8EXwAOAKMAbQcOAJkAgQUOAN0HbQcGAB0BLgAGAMEF
LgAGAIkBpwQGAPkApwQGANQHIAUAAAAAJQAAAAAAAQABAAEAEADEBAEAOQABAAEAAAAQAEwGqAZp
AAEAAwAAARAA7AaoBn0AAwAHAAMBAAAtBwAAYQAEAAoAEQCzBB0BEQCuASEBEQC2ACUBBgZXACkB
VoAdBywBVoCOASwBUCAAAAAAhgDKBAYAAQCUIwAAAACGGAUGBgABAJwjAAAAAIMYBQYGAAEApCMA
AAAAkwigBTABAQDQIwAAAACTCJYBNQEBANcjAAAAAJMIogE6AQEA3yMAAAAAlghSB0ABAgDmIwAA
AACGGAUGBgACAO4jAAAAAJEYCwZFAQIAAAABANMDCQAFBgEAEQAFBgYAGQAFBgoAKQAFBhAAMQAF
BhAAOQAFBhAAQQAFBhAASQAFBhAAUQAFBhAAWQAFBhAAYQAFBhAAaQAFBgYAyQAFBgYA8QAFBhUA
AQEFBgYAeQDABzkAeQDzAz4AcQAlB0MACQHeBkkAEQGeBE8AGQHJA1YA0QDzA1oAIQE7AV4AIQHa
BF4AKQFEB2MAgQAFBhAAMQG/BAYAOQHXBmkAgQDGAG4AmQA7B3gAUQH3BX4AiQCDB1YAkQCeBIMA
KQH1BogAKQFEB40AWQEFBpQAYQEFBpsAmQAFBgYAaQGZBKIAKQGuAKgAKQFEB64AKQFEB7QAmQD+
BrwAUQGPB8IAcQGeBMYAeQFHAVoAoQAFBhAAgQEFBs0AiQGZBwEAiQHpB8IAkQEFBtQAkQEiARAA
kQHdBdoAMQENAgYAiQCsB+AAqQATAgYAmQG1B+QAoQF/ARAACQFeBwEAcQAFBgYA0QAFBgYAqQEL
AeoAqQHQB/MA2QAFBvkA+QAFBgYACAAUABMBCAAYABgBKQBzAIABLgALAFgBLgATAGEBLgAbAIAB
LgAjAIkBLgArALIBLgAzALIBLgA7ALIBLgBDAIkBLgBLALgBLgBTALIBLgBbAM8BQwBjABgBSQBz
AIABYQB7ABgBYwBrABgBGwADAAEABAADAAAApAVJAQAAtgFOAQAAVgdTAQIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAARSS4bgAAAAAAAAEAAAAEAAAAAAAAAAAAAAABAX0AAAAAABAAAAAA
AAAAAAAAAAoBAQQAAAAABAAAAAAAAAAAAAAAAQFfAAAAAAAEAAAAAAAAAAAAAAABAacEAAAAABAA
AAAAAAAAAAAAAAoBOAAAAAAAAAAAAAEAAABWBgAABQACAAAAAFNUXzBjODM5NmI4ZDdiOTQwOTY5
MGE1OGUzMDIwZDUwNGY1ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1h
bmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgBP
bGVEYlNjaGVtYUd1aWQAT2xlRGJDb21tYW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZhdWx0SW5z
dGFuY2UAR2V0T2xlRGJTY2hlbWFUYWJsZQBEYXRhVGFibGUAVmFyaWFibGUASURpc3Bvc2FibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBzZXRfRGVzdGluYXRpb25U
YWJsZU5hbWUAR2V0RmlsZU5hbWUAZ2V0X0NvbHVtbk5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50
ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlz
cG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMGM4Mzk2YjhkN2I5NDA5NjkwYTU4
ZTMwMjBkNTA0ZjUuZGxsAEZpbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3Bl
bgBTY3JpcHRNYWluAERhdGFDb2x1bW4AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERh
dGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBTcWxD
b25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8AZ2V0X1Jl
c291cmNlTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBPbGVEYkRhdGFBZGFwdGVyAFdy
aXRlVG9TZXJ2ZXIASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF8wYzgzOTZiOGQ3Yjk0MDk2OTBhNThlMzAyMGQ1MDRmNS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMGM4Mzk2YjhkN2I5NDA5NjkwYTU4ZTMw
MjBkNTA0ZjUuUHJvcGVydGllcwBUYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBDb250YWlu
cwBnZXRfQ29sdW1ucwBTeXN0ZW0uQ29sbGVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABT
eXN0ZW0uRGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AHNldF9Db21tYW5kVGlt
ZW91dABNb3ZlTmV4dABDcmVhdGVUZXh0AGdldF9Ob3cARGF0YVJvdwBnZXRfQXNzZW1ibHkAU3Fs
QnVsa0NvcHkARXhlY3V0ZU5vblF1ZXJ5AAAAAAAdeQB5AHkAeQBNAE0AZABkAEgASABtAG0AcwBz
AACAnUMAOgBcAFUAcwBlAHIAcwBcAEEAcgBhAGYAYQB0AFwARABlAHMAawB0AG8AcABcAEgAbwBz
AHAAaQB0AGEAbAAgAE0AYQBuAGEAZwBlAG0AZQBuAHQAIABEAGEAaABzAGIAbwBhAHIAZABcAFMA
UwBJAFMAIABEAGEAdABhACAAUABpAHAAZQBsAGkAbgBlAHMAXABMAG8AZwBzAAARRgBpAGwAZQBQ
AGEAdABoAAABAAdZAEUAUwAAXVAAcgBvAHYAaQBkAGUAcgA9AE0AaQBjAHIAbwBzAG8AZgB0AC4A
QQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AAEs7
AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBlAHMAPQAiAEUAeABjAGUAbAAgADEA
MgAuADAAOwBIAEQAUgA9AAAROwBJAE0ARQBYAD0AMQAiAACA92QAYQB0AGEAIABzAG8AdQByAGMA
ZQA9AEQARQBTAEsAVABPAFAALQA1AFEARgBPAFUARQBJADsAaQBuAGkAdABpAGEAbAAgAGMAYQB0
AGEAbABvAGcAIAA9ACAASABvAHMAcABpAHQAYQBsAF8ATQBhAG4AYQBnAGUAbQBlAG4AdAA7ACAA
cABlAHIAcwBpAHMAdAAgAHMAZQBjAHUAcgBpAHQAeQAgAGkAbgBmAG8AIAA9ACAAVAByAHUAZQA7
AEkAbgB0AGUAZwByAGEAdABlAGQAIABTAGUAYwB1AHIAaQB0AHkAIAA9ACAAUwBTAFAASQA7AAEV
VABBAEIATABFAF8ATgBBAE0ARQAAAyQAAB9zAGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAWwAA
A10AAG9JAEYAIABFAFgASQBTAFQAUwAgACgAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAHMA
eQBzAC4AbwBiAGoAZQBjAHQAcwAgAFcASABFAFIARQAgAG8AYgBqAGUAYwB0AF8AaQBkACAAPQAg
AAAnTwBCAEoARQBDAFQAXwBJAEQAKABOACcAWwBkAGIAbwBdAC4AWwABL10AJwApACAAQQBOAEQA
IAB0AHkAcABlACAAaQBuACAAKABOACcAVQAnACkAKQABJUQAcgBvAHAAIABUAGEAYgBsAGUAIABb
AGQAYgBvAF0ALgBbAAAdQwByAGUAYQB0AGUAIAB0AGEAYgBsAGUAIABbAAADKAAAA1sAACNdACAA
TgBWAGEAcgBjAGgAYQByACgANAAwADAAMAApACwAACFdACAATgBWAGEAcgBjAGgAYQByACgANAAw
ADAAMAApAAADKQAAFVwARQByAHIAbwByAEwAbwBnAF8AAAkuAGwAbwBnAABxUwBUAF8AMABjADgA
MwA5ADYAYgA4AGQANwBiADkANAAwADkANgA5ADAAYQA1ADgAZQAzADAAMgAwAGQANQAwADQAZgA1
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAD4luF5KZKrRpwg
vHBYs9dOAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1HQcSDg4RPQ4ODhJBDg4SRRJJEk0OElEI
ElUSWRJdBAAAET0EIAEODgUgABKAhQUgABKAiQYgARKAjRwDIAAcAyAADgQAAQ4OBQABDh0OBAYR
gKEJIAISTRGAoR0cBSAAEoClBCAAEkUEIAEcDgQgAQIOBgADDg4ODgYgAgEOEkEGIAEBEoCtBSAB
CBJNBSACDg4OBQACDg4OBwAEDg4ODg4FIAASgLkDIAAIBiABEoC9CAYgAgEOElEFIAEBElEFIAEB
Ek0DIAACBQABEl0OCAABEoDVEYDZBSAAEoDdByACAQ4SgN0It3pcVhk04IkIiYRdzYCAzJEEAAAA
AAQBAAAAAwYSbQMGEnEDBhIQAgYIAwYRFAQAABJtBAAAEnEFAAEBEnEEAAASEAMAAAEECAASbQQI
ABJxBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAA
KAEAI1NUXzBjODM5NmI4ZDdiOTQwOTY5MGE1OGUzMDIwZDUwNGY1AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAIA5AAAAAAAAAAAA
AJo5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAuG5FJAAAAQC4bkUkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwAwAGMAOAAzADkANgBiADgAZAA3AGIAOQA0ADAAOQA2ADkAMABhADUAOABlADMAMAAyADAA
ZAA1ADAANABmADUAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOQAy
ADgANQAuADIAOAAzADQANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwAwAGMAOAAzADkANgBiADgAZAA3AGIAOQA0ADAAOQA2ADkAMABhADUAOABlADMAMAAyADAAZAA1
ADAANABmADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADAAYwA4ADMAOQA2AGIAOABkADcAYgA5ADQAMAA5ADYAOQAwAGEANQA4AGUAMwAw
ADIAMABkADUAMAA0AGYANQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwAwAGMAOAAzADkANgBiADgAZAA3AGIAOQA0ADAAOQA2ADkAMABhADUAOABlADMAMAAy
ADAAZAA1ADAANABmADUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADkAMgA4ADUALgAyADgAMwA0ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADkAMgA4ADUALgAyADgAMwA0ADQAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAArDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{0A7825C0-F8D7-48CA-99AC-3160633509B6}"
          DTS:ObjectName="{0A7825C0-F8D7-48CA-99AC-3160633509B6}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="80.7999890724825,41.5333322545554" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="298.4,151.2"
          Size="298.4,194.4"
          Id="Package\Foreach Loop Container"
          TopLeft="414.999977325401,71.9333328331178" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>